# -*- snakemake -*-
try:
    from snakemakelib.stat import is_compressed, is_installed
    from snakemakelib.bio.ngs.db import index, ref
except:
    pass

DEFAULT_RULES = ['star_index', 'star_align', 'star_summarize_alignment_runs']

include: '../../../comp/settings.rules'
include: '../settings.rules'

config_default = { 
    'bio.ngs.align.star' : {
        'cmd' : "STAR",
        'ref' : config['bio.ngs.settings']['db']['ref'],
        'extra_ref' : config['bio.ngs.settings']['db']['extra_ref'],
        'index' : "",
        'rules' : DEFAULT_RULES,
        'star_index': {
            'genome' : "Genome",
        },
    },
}

configdefault: config_default

# Update index
config['bio.ngs.align.star']['index'] = index(
    ref = config['bio.ngs.align.star']['ref'],
    index = config['bio.ngs.align.star']['index'],
    application = 'star',
    index_name = config['bio.ngs.align.star']['star_index']['genome'],
    build = config['bio.ngs.settings']['db']['build'])

if config['bio.ngs.align.star']['extra_ref']:
    include: '../db/ercc.rules'
    include: '../db/cloudbiolinux.rules'

if not is_installed(config['bio.ngs.align.star']['cmd']):
    raise Exception("{prog} not installed or not in PATH; either add the path to $PATH or set the full executable path in configuration section bio.ngs.align.star.cmd".format(config['bio.ngs.align.star']['cmd']))

for rule in config['bio.ngs.align.star']['rules']:
    include: os.path.join("star", rule + ".rule")
