# -*- snakemake -*-
#
# Manual installation required. No setup exists so full path to
# installation directory must be supplied. Download from
# https://sites.google.com/site/danposdoc/download and extract archive
#
# Requirements:
# R version 2.9.1.
# Python 2.7, rpy2, numpy 1.5.0.
# Samtools 0.1.7 (only when input data is in sam or bam format)
#
# Memory ~ (genome_size/step_size) x ( replicate_count + max(2,
# comparison_count) ) x 8 bits.
#
import os

try:
    from snakemakelib.stat import is_installed
except:
    pass

include: "../settings.rules"

DEFAULT_RULES = ['danpos_dpos', 'danpos_bin_reads_by_nucleosome']

config_default = {
    'bio.ngs.chromatin.danpos' : {
        'bins': [(0,100), (180,247), (315,473), (558,615)],
        'cmd': 'danpos.py',
        'home': os.getenv("DANPOS_HOME", ""),
        'rules': DEFAULT_RULES,
        # 'dpeak' : {
        #     'options' : "",
        # },
        # 'dregion' : {
        #     'options' : "",
        # },
        # 'dtriple' : {
        #     'options' : "",
        # },
        # 'profile' : {
        #     'options' : "",
        # },
        # 'wig' : {
        #     'options' : "",
        # },
        # 'wig2wiq' : {
        #     'options' : "",
        # },
        # 'stat' : {
        #     'options' : "",
        # },
        # 'selector' : {
        #     'options' : "",
        # },
        # 'valuesAtRanks' : {
        #     'options' : "",
        # },
    },
}

configdefault: config_default

dp_cfg = config['bio.ngs.chromatin.danpos']
python2 = config['comp.settings']['python2']['activate_cmd']

if dp_cfg['home']:
    dp_cfg['cmd'] = os.path.join(dp_cfg['home'], os.path.basename(dp_cfg['cmd']))

if not is_installed(os.path.join(dp_cfg.get('cmd', ""))):
    raise Exception("""
    bio.ngs.chromatin.danpos: {prog} not installed or not in PATH; 
        either set environment variable DANPOS_HOME or 
        bio.ngs.chromatin.danpos.home configuration setting
""".format(prog=dp_cfg.get('cmd')))

for rule in config['bio.ngs.chromatin.danpos']['rules']:
    include: os.path.join("danpos", rule + ".rule")
