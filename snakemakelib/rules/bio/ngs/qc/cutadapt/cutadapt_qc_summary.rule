# -*- snakemake -*-
from snakemakelib.bio.ngs.qc.cutadapt import collect_cutadapt_qc_results, make_cutadapt_summary_plot

def _cutadapt_find_result_files_fn(wildcards):
    sources = generic_target_generator(tgt_re =
                                       config['bio.ngs.settings']['sampleorg'].run_id_re,
                                       src_re=config['bio.ngs.settings']['sampleorg'].run_id_re,
                                       target_suffix = wildcards.label + "cutadapt_metrics",
                                       **config['bio.ngs.settings'])
    return sources

rule cutadapt_qc_summary:
    """Summarize results from cutadapt"""
    input: _cutadapt_find_result_files_fn
    output: summary = os.path.join("{path}", "cutadapt{label}summary.csv")
    run:
        try:
            samples = [config['bio.ngs.settings']['sampleorg'].run_id_re.parse(f)['SM'] for f in input]
            runs = [config['bio.ngs.settings']['sampleorg'].run_id_re.parse(f)['PU'] for f in input]
        except KeyError:
            raise Exception("failed to parse sample name 'SM' from input list")
        df = collect_cutadapt_qc_results(input, list(zip(samples, runs)))
        df.to_csv(output.summary)
