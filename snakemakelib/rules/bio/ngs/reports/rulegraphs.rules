# -*- snakemake -*-
import os
from mako.template import Template
from snakemakelib.config import update_config, SNAKEMAKELIB_RULES_PATH

include: '../settings.rules'
include: './settings.rules'

rule_report = Template(filename=os.path.join(SNAKEMAKELIB_RULES_PATH, 'bio/ngs/reports', 'rulegraphs.mako'))

config_default = {
    'bio.ngs.reports.rulegraphs' : {
        'rulegraphs' : [],
    },
}


rule report_rulegraphs:
    """Generate rulegraphs for targets specified by config['bio.ngs.reports.rulegraphs']['rulegraphs']"""
    input: [os.path.join(config['bio.ngs.reports.settings']['reportdir'], x) for x in config['bio.ngs.reports.rulegraphs']['rulegraphs']]
    output: os.path.join(config['bio.ngs.reports.settings']['reportdir'], "rules.html")
    run:
      kw = {
          'project_name' : config['bio.ngs.reports.settings']['project_name'],
          'application' : config['bio.ngs.reports.settings']['application'],
          'rulegraphs' : [x for x in config['bio.ngs.reports.rulegraphs']['rulegraphs']],
      }
      d = {}
      d.update([(x,os.path.join(config['bio.ngs.reports.settings']['reportdir'], x)) for x in config['bio.ngs.reports.rulegraphs']['rulegraphs']])
      s = rule_report.render(**kw)
      report(s, str(output), **d)
      
rule sample_dag:
    """Utility rule to generate dag for first sample in sample list"""
    input: "{prefix}", config['bio.ngs.settings']['samples'][0]
    output: "{prefix}_dag.png"
    shell: "snakemake  --dag {input[0]} --config samples=\"['{input[1]}']\" | dot -Tpng -o {output}"

rule rulegraph:
    """Generate rulegraph for a specific rule"""
    input: "{prefix}"
    output: "{prefix}_rulegraph.png"
    shell: "snakemake --rulegraph {input} | dot -Tpng -o {output}"

ruleorder: rulegraph > sample_dag
