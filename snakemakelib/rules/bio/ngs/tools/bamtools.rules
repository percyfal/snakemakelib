# -*- snakemake -*-
import os
include: '../settings.rules'

DEFAULT_RULES = ['bamtools_filter_unique',
                 'bamtools_filter_script',
                 'bamtools_create_filter_script']

config_default = { 
    'bio.ngs.tools.bamtools' : {
        'rules' : DEFAULT_RULES,
        'ref' : config['bio.ngs.settings']['db']['ref'],
        'cmd' : "bamtools",
        'home' : "",
        'threads' : config['bio.ngs.settings']['threads'],
        'options' : "",
        'filter' : {
            'options' : {'mapQuality' : ">=255"},
            'regions' : config['bio.ngs.settings']['regions'],
        },
    },
}

update_config(config_default, config)
config = config_default

# see http://stackoverflow.com/questions/23244418/set-ld-library-path-before-importing-in-python
libpath = ""
if config['bio.ngs.tools.bamtools']['home']:
    os.environ["PATH"] += os.pathsep + config['bio.ngs.tools.bamtools']['home']
    bamtools_lib = os.path.join(os.path.dirname(os.path.dirname(config['bio.ngs.tools.bamtools']['home'])), "lib")
    libpath = "LD_LIBRARY_PATH=" + bamtools_lib
    if not os.path.exists(bamtools_lib):
        raise Exception("\nbio.ngs.tools.bamtools: couldn't find bamtools library path {libpath}".format(libpath=libpath))

for rule in config['bio.ngs.tools.bamtools']['rules']:
    include: os.path.join("bamtools", rule + ".rule")
