# -*- snakemake -*-
# See http://sandberg.cmb.ki.se/multo/
#

import os
from snakemakelib.stat import is_installed
from snakemakelib.config import update_snakemake_config

include: '../settings.rules'
include: '../../../comp/settings.rules'

config_default = {
    'bio.ngs.tools.multo' : {
        'home' : "",
        'cmd'  : "MULTo1.0.py",
        'options' : " -t refGene -s Mmusculus",
        'threads' : config['bio.ngs.settings']['threads'],
    },
}

config = update_snakemake_config(config, config_default)

multo_cfg = config['bio.ngs.tools.multo']
python2 = config['comp.settings']['python2']['activate_cmd']

if not multo_cfg['home']:
    raise Exception ("\n\nmulto: *must* set multo home for MULTo to run; see bio.ngs.tools.multo.home\n\n")

rule multo_transcript_level:
    params: cmd = os.path.join(multo_cfg['home'], 'src', multo_cfg['cmd']),
            options = multo_cfg['options']
    threads: multo_cfg['threads']
    output: outdir = os.path.join("{outdir}", "{assembly}_{kmin}-{kmax}")
    shell: python2 + " && python {params.cmd} {params.options} -T -a {wildcards.assembly} -k {wildcards.kmin} -m {wildcards.kmax} -p {threads} -o {output.outdir}"
